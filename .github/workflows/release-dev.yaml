name: release-on-develop
on:
  push:
    branches:
      - develop
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish-spring-amd:
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: gradle/actions/setup-gradle@v3
        name: setup gradle

      - name: build and publish Container Image with gradle
        run: |
          ./gradlew :kitiler-spring-application:buildImage \
            --parallel \
            --continue \
            -Pimage.native.enabled=false \
            -Pimage.registry.publish.username=${{github.actor}} \
            -Pimage.registry.publish.password=${{secrets.GITHUB_TOKEN}} \
            -Pimage.name=ghcr.io/tronto20/kitiler \
            -Pimage.tags=spring-${{ github.ref_name }}-amd,spring-${{ github.ref_name }}-${{ github.run_id }}-amd \
            -Pimage.push=true

  publish-spring-arm:
    runs-on: ubuntu-24.04-arm
    environment: release
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: gradle/actions/setup-gradle@v3
        name: setup gradle

      - name: build and publish Container Image with gradle
        run: |
          ./gradlew :kitiler-spring-application:buildImage \
            --parallel \
            --continue \
            -Pimage.native.enabled=false \
            -Pimage.registry.publish.username=${{github.actor}} \
            -Pimage.registry.publish.password=${{secrets.GITHUB_TOKEN}} \
            -Pimage.name=ghcr.io/tronto20/kitiler \
            -Pimage.tags=spring-${{ github.ref_name }}-arm,spring-${{ github.ref_name }}-${{ github.run_id }}-arm \
            -Pimage.push=true

  publish-spring-manifest:
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      packages: write

    needs:
      - publish-spring-amd
      - publish-spring-arm
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest
        run: |
          docker buildx imagetools create \
          -t ghcr.io/tronto20/kitiler:spring-${{ github.ref_name }} \
          -t ghcr.io/tronto20/kitiler:spring-${{ github.ref_name }}-${{ github.run_id }} \
          ghcr.io/tronto20/kitiler:spring-${{ github.ref_name }}-${{ github.run_id }}-amd \
          ghcr.io/tronto20/kitiler:spring-${{ github.ref_name }}-${{ github.run_id }}-arm


  publish-spring-native-amd:
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: gradle/actions/setup-gradle@v3
        name: setup gradle

      - name: build and publish Container Image with gradle
        run: |
          ./gradlew :kitiler-spring-application:buildImage \
            --parallel \
            --continue \
            -Pimage.registry.publish.username=${{github.actor}} \
            -Pimage.registry.publish.password=${{secrets.GITHUB_TOKEN}} \
            -Pimage.name=ghcr.io/tronto20/kitiler \
            -Pimage.tags=spring-native-${{ github.ref_name }}-${{ github.run_id }}-amd,spring-native-${{ github.ref_name }}-amd,${{ github.ref_name }}-${{ github.run_id }}-amd,${{ github.ref_name }}-amd \
            -Pimage.push=true

  publish-spring-native-arm:
    runs-on: ubuntu-24.04-arm
    environment: release
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - uses: gradle/actions/setup-gradle@v3
        name: setup gradle

      - name: build and publish Container Image with gradle
        run: |
          ./gradlew :kitiler-spring-application:buildImage \
            --parallel \
            --continue \
            -Pimage.registry.publish.username=${{github.actor}} \
            -Pimage.registry.publish.password=${{secrets.GITHUB_TOKEN}} \
            -Pimage.name=ghcr.io/tronto20/kitiler \
            -Pimage.tags=spring-native-${{ github.ref_name }}-${{ github.run_id }}-arm,spring-native-${{ github.ref_name }}-arm,${{ github.ref_name }}-${{ github.run_id }}-arm,${{ github.ref_name }}-arm \
            -Pimage.push=true

  publish-spring-native-manifest:
    runs-on: ubuntu-24.04
    environment: release
    permissions:
      packages: write

    needs:
      - publish-spring-native-amd
      - publish-spring-native-arm
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest
        run: |
          docker buildx imagetools create \
          -t ghcr.io/tronto20/kitiler:${{ github.ref_name }} \
          -t ghcr.io/tronto20/kitiler:${{ github.ref_name }}-${{ github.run_id }} \
          -t ghcr.io/tronto20/kitiler:spring-native-${{ github.ref_name }} \
          -t ghcr.io/tronto20/kitiler:spring-native-${{ github.ref_name }}-${{ github.run_id }} \
          ghcr.io/tronto20/kitiler:spring-native-${{ github.ref_name }}-${{ github.run_id }}-amd \
          ghcr.io/tronto20/kitiler:spring-native-${{ github.ref_name }}-${{ github.run_id }}-arm
